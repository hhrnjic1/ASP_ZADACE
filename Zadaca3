#include <algorithm>
#include <iostream>
#include <list>
#include <new>
#include <vector>
using namespace std;

void radixSort(std::vector<int> &a) {
  int max = a[0];
  for (int i = 1; i < a.size(); i++) {
    if (max < a[i])
      max = a[i];
  }
  vector<vector<int>> n(10);
  vector<int> pamti;
  for (int i = 1; max / i > 0; i *= 10) {
    for (int j = 0; j < a.size(); j++) {
      int c = (a[j] / i) % 10;
      n[c].push_back(a[j]);
    }
    for (int k = 0; k < n.size(); k++) {
      if (!n[k].empty()) {
        for (int l = 0; l < n[k].size(); l++) {
          pamti.push_back(n[k][l]);
        }
      }
    }
    for (int o = 0; o < 10; o++) {
      n[o].clear();
    }
    a.clear();
    a = pamti;
    pamti.clear();
  }
}

bool DalijeList(int k, int velicina) {
  if (k > velicina / 2 && k < velicina)
    return true;
  return false;
}
void PopraviOdozdo(vector<int> &a, int k, int velicina = -1) {
  if (velicina == -1)
    velicina = a.size();
  while (!DalijeList(k, velicina)) {
    int lijevo = 2 * k + 1;
    int desno = 2 * k + 2;
    if (lijevo >= velicina)
      return;
    else if (desno >= velicina && lijevo < velicina) {
      if (a[lijevo] > a[k]) {
        int temp = a[lijevo];
        a[lijevo] = a[k];
        a[k] = temp;
        k = lijevo;
      } else
        return;
    } else if (lijevo < velicina && desno < velicina) {
      if (a[desno] >= a[lijevo] && a[desno] > a[k]) {
        int temp = a[desno];
        a[desno] = a[k];
        a[k] = temp;
        k = desno;
      } else if (a[lijevo] > a[desno] && a[lijevo] > a[k]) {
        int temp = a[lijevo];
        a[lijevo] = a[k];
        a[k] = temp;
        k = lijevo;
      } else
        return;
    }
  }
}

void stvoriGomilu(vector<int> &a) {
  int n = a.size() / 2 - 1;
  for (int i = n; i >= 0; i--) {
    PopraviOdozdo(a, i);
  }
}

void PopraviOdozgo(vector<int> &a, int k) {
  while (k != 0 && a[k] > a[(k - 1) / 2]) {
    int temp = a[k];
    a[k] = a[(k - 1) / 2];
    a[(k - 1) / 2] = temp;
    k = (k - 1) / 2;
  }
}

void umetniUGomilu(vector<int> &a, int umetnuti, int &velicina) {
  a.push_back(umetnuti);
  velicina++;
  PopraviOdozgo(a, velicina - 1);
}

int izbaciPrvi(vector<int> &a, int &velicina) {
  if (a.size() == 0)
    __throw_bad_alloc();
  int izbaceni = a[0];
  velicina--;
  a[0] = a[velicina];
  a[velicina] = izbaceni;
  if (a.size() != 0) {
    PopraviOdozdo(a, 0, velicina);
  }
  return izbaceni;
}

void gomilaSort(vector<int> &a) {
  stvoriGomilu(a);
  int velicina = a.size();
  while (velicina != 0) {
    izbaciPrvi(a, velicina);
  }
}

int main() {
  vector<int> a;
  int velicina = 0;
  umetniUGomilu(a, 546, velicina);
  umetniUGomilu(a, 435435, velicina);
  umetniUGomilu(a, 12, velicina);
  umetniUGomilu(a, 546, velicina);
  umetniUGomilu(a, 675767, velicina);
  umetniUGomilu(a, 33, velicina);
  umetniUGomilu(a, 555, velicina);
  umetniUGomilu(a, 1, velicina);
  izbaciPrvi(a, velicina);
  izbaciPrvi(a, velicina);
  izbaciPrvi(a, velicina);
  izbaciPrvi(a, velicina);
  izbaciPrvi(a, velicina);
  izbaciPrvi(a, velicina);
  izbaciPrvi(a, velicina);
  izbaciPrvi(a, velicina);
  for (int i(0); i < a.size(); i++) {
    cout << a[i] << " " << velicina << " ";
  }
}
